{
	"info": {
		"_postman_id": "843b0cd5-5dc4-4100-a5d3-5fc89898a4d5",
		"name": "Trello create a Board",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18943841"
	},
	"item": [
		{
			"name": "create a board with json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const boardName = pm.iterationData.get('boardName');\r",
							"pm.test(\"Should return correct board name \" + boardName, function () {\r",
							"    pm.expect(json.name).to.eql(boardName)\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('boardId', json.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('boardName', pm.iterationData.get('boardName'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"defaultLists\": false,\r\n    \"name\": \"{{boardName}}\",\r\n    \"prefs_permissionLevel\": \"org\",\r\n    \"prefs_selfJoin\": true,\r\n    \"idOrganization\": \"627180ee4f6d893f2f73ce9a\",\r\n    \"prefs_background_url\": \"https://images.unsplash.com/photo-1651497111372-9107c1a5d9a0?ixid=Mnw3MDY2fDB8MXxjb2xsZWN0aW9ufDF8MzE3MDk5fHx8fHwyfHwxNjUxNzc0NTQ2&ixlib=rb-1.2.1&w=2560&h=2048&q=90\",\r\n    \"token\": \"{{token}}\",\r\n    \"key\": \"{{key}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boards",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const boardName = pm.collectionVariables.get('boardName');\r",
							"pm.test(\"Should return correct board name \" + boardName, function () {\r",
							"    pm.expect(json.name).to.eql(boardName)\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('boardId', json.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/?name={{boardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update desc of board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const desc = pm.collectionVariables.get('desc');\r",
							"pm.test(\"Should return corect description of board \" + desc, function () {\r",
							"    pm.expect(json.desc).to.eql(desc); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?desc={{desc}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "desc",
							"value": "{{desc}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get existing board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const boardName = pm.collectionVariables.get('boardName');\r",
							"pm.test(\"Should return correct board name \" + boardName, function () {\r",
							"    pm.expect(json.name).to.eql(boardName);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete existing board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "read non existing board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Should retur message was not found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('The requested resource was not found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete nonexisting board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Should retur message was not found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('The requested resource was not found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete existing board Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "boardName",
			"value": "nazwa boardu",
			"type": "string"
		},
		{
			"key": "desc",
			"value": "nowy opis",
			"type": "string"
		},
		{
			"key": "color",
			"value": "orange",
			"type": "string"
		}
	]
}